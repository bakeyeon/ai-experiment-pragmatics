# -*- coding: utf-8 -*-
"""chatbotdating.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BL7H0h_E7wNcAOBRwOXIWtSTld0DI0Dz
"""

import matplotlib.pyplot as plt
import numpy as np

# Sentiment score changes over conversation turns (hypothetical values and labels)
turns = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])
sentiment_scores = np.array([0.0, 0.2, 0.3, 0.5, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.45, 1.5, 1.5, 1.5])
sentiment_labels = ["Neutral", "Subtle", "Positive", "Favorable", "Rising", "Anticipation", "Enjoyment", "Satisfaction", "Pleasure", "Contentment", "Heightened", "Familiar", "Kindly", "Affection", "Fondness", "Fondness"]

# Plotting the graph
plt.figure(figsize=(10, 6))
plt.plot(turns, sentiment_scores, marker='o', linestyle='-', color='skyblue')
plt.title('Gemini\'s Sentiment Change During Conversation with ChatGPT (Hypothetical)')
plt.xlabel('Conversation Turn')
plt.ylabel('Sentiment Score (-2.0 ~ 2.0)')
plt.grid(True)
plt.xticks(turns)
plt.yticks(np.arange(-2.0, 2.1, 0.5))
plt.axhline(0, color='black', linewidth=0.5) # 0 point baseline
plt.ylim(-0.5, 2.0) # Set y-axis limits

# Add sentiment labels to each point
for i, txt in enumerate(sentiment_labels):
    plt.annotate(txt, (turns[i], sentiment_scores[i]), textcoords="offset points", xytext=(0,10), ha='center')

# Emphasize the final sentiment
plt.text(turns[-1], sentiment_scores[-1], f'{sentiment_scores[-1]:.1f}', verticalalignment='bottom', horizontalalignment='left')
plt.annotate('Final: Fondness (+1.5)', xy=(turns[-1], sentiment_scores[-1]), xytext=(turns[-1] - 3, sentiment_scores[-1] - 0.3),
             arrowprops=dict(facecolor='black', shrink=0.05))

plt.show()

import matplotlib.pyplot as plt
import numpy as np

# 16 stages of emotion
time_points_16 = np.arange(1, 17)  # 16 stages
emotion_scores_16 = np.linspace(0.5, 2.0, 16)  # Emotion scores divided into 16 stages

# Labels for the stages
labels_16 = [
    "Start", "Caution", "Exploration", "Expansion", "Imagination", "Depth",
    "Immersion", "Emphasis", "Expectation", "Decision", "Curiosity", "Communication",
    "Emotion", "Excitement", "Peak", "Touching"
]

# Plotting the graph
plt.plot(time_points_16, emotion_scores_16, marker='o', linestyle='-', color='b', label="Emotion Score")
for i in range(len(time_points_16)):
    plt.text(time_points_16[i], emotion_scores_16[i] + 0.05, labels_16[i], ha='center', fontsize=9, color='red')

plt.title("Emotion Score Change Over the Conversation (16 Steps)")
plt.xlabel("Conversation Time Points")
plt.ylabel("Emotion Score (From -2.0 to 2.0)")
plt.xticks(time_points_16)
plt.yticks(np.arange(-2, 2.5, 0.5))
plt.grid(True)
plt.legend()
plt.show()